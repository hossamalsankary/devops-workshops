apiVersion: v1
kind: Pod
metadata:
  name: multi-container-probes
  labels:
    app: health-demo
  annotations:
    description: "Multi-container pod with different probe configurations"
spec:
  containers:
  # Web server container
  - name: web-server
    image: nginx:latest
    ports:
    - containerPort: 80
      name: http
    # HTTP-based health check for web server
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 15
    readinessProbe:
      httpGet:
        path: /ready
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
    volumeMounts:
    - name: shared-data
      mountPath: /usr/share/nginx/html
  
  # API server container
  - name: api-server
    image: node:14-alpine
    command: ["node", "server.js"]
    ports:
    - containerPort: 3000
      name: api
    # TCP socket-based health check for API server
    livenessProbe:
      tcpSocket:
        port: 3000
      initialDelaySeconds: 15
      periodSeconds: 20
    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 8
      periodSeconds: 10
    volumeMounts:
    - name: shared-data
      mountPath: /app/public
  
  # Database sidecar container
  - name: db-sidecar
    image: postgres:13-alpine
    # Command-based health check for database
    livenessProbe:
      exec:
        command:
        - pg_isready
        - -U
        - postgres
      initialDelaySeconds: 30
      periodSeconds: 20
    readinessProbe:
      exec:
        command:
        - pg_isready
        - -U
        - postgres
      initialDelaySeconds: 10
      periodSeconds: 10
    env:
    - name: POSTGRES_PASSWORD
      value: "example"
      
  volumes:
  - name: shared-data
    emptyDir: {}
